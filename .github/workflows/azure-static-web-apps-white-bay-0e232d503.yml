name: Build and Deploy Angular and NestJS Apps to Azure

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      # Checkout the code
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      
      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install

      # Build both frontend and backend applications
      - name: Build Applications
        run: |
          npm run build:my-app
          npm run build:data-api

      # Zip and prepare the frontend and backend artifacts for deployment
      - name: Zip frontend and backend for deployment
        run: |
          echo ${GITHUB_WORKSPACE}
          cd ${GITHUB_WORKSPACE}/dist/apps/my-app/ && zip ${GITHUB_WORKSPACE}/frontend-app-release.zip ./* -r
          cd ${GITHUB_WORKSPACE}/dist/apps/data-api/ && zip ${GITHUB_WORKSPACE}/backend-api-release.zip ./* -r

      # Upload frontend artifact
      - name: Upload frontend artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: frontend-app
          path: frontend-app-release.zip

      # Upload backend artifact
      - name: Upload backend artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: backend-api
          path: backend-api-release.zip

  deploy-frontend-app:
    runs-on: ubuntu-latest
    needs: build_and_deploy_job
    environment:
      name: 'Production'

    steps:
      # Download frontend artifact
      - name: Download frontend artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: frontend-app

      # Unzip frontend artifact
      - name: Unzip frontend artifact
        run: unzip frontend-app-release.zip

      # Deploy frontend to Azure Static Web App
      - name: Deploy to Azure Static Web App
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # GitHub integrations
          action: "upload"
          app_location: "/" # Root location for frontend
          api_location: "" # Leave blank for static only
          output_location: "dist/apps/my-app" # Path to the frontend build output

  deploy-backend-api:
    runs-on: ubuntu-latest
    needs: build_and_deploy_job
    environment:
      name: 'Production'

    steps:
      # Download backend artifact
      - name: Download backend artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: backend-api

      # Unzip backend artifact
      - name: Unzip backend artifact
        run: unzip backend-api-release.zip

      # Install backend dependencies
      - name: Install backend dependencies
        run: npm install

      # Deploy backend to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'your-backend-app-name' # Replace with your Azure Web App name
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }} # Azure publish profile secret
          package: . # Path to the backend package
