name: Build and deploy a Node.js app and an Angular app to an Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Set up Node.js version
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install dependencies, build, and run tests
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      # Zip artifacts for frontend and backend
      - name: Zip artifacts for deployment
        run: |
          echo ${GITHUB_WORKSPACE}
          # Zipping the backend API
          cd ${GITHUB_WORKSPACE}/dist/apps/backend-api/ && zip -r ${GITHUB_WORKSPACE}/backend-api-release.zip ./*
          # Zipping the frontend app
          cd ${GITHUB_WORKSPACE}/dist/apps/frontend-app/ && zip -r ${GITHUB_WORKSPACE}/frontend-app-release.zip ./*

      # Upload frontend-app artifact for deployment job
      - name: Upload frontend-app artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: frontend-app
          path: frontend-app-release.zip
          
      # Upload backend-api artifact for deployment job
      - name: Upload backend-api artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: backend-api
          path: backend-api-release.zip
          
          
  deploy-frontend-app:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'

    steps:
      # Download frontend artifact from build job
      - name: Download frontend artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: frontend-app

      # Unzip frontend artifact
      - name: Unzip frontend artifact
        run: unzip frontend-app-release.zip

      # Deploy frontend to Azure Static Web App
      - name: Deploy to static Azure Web App
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.ANGULAR_PUBLISHTOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e. PR comments)
          action: "upload"
          app_location: "/" # Root location for frontend app
          api_location: "" # No API, leave empty for static site only
          output_location: "" # No separate output location

  deploy-backend-api:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      # Download backend artifact from build job
      - name: Download backend artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: backend-api

      # Unzip backend artifact
      - name: Unzip backend artifact
        run: unzip backend-api-release.zip

      # Install backend dependencies
      - name: Install backend dependencies
        run: npm install

      # Deploy backend to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'NxWorkshop' # Replace with your Azure Web App name for backend
          slot-name: 'Production'
          publish-profile: ${{ secrets.NEXTJS_PUBLISHPROFILE }} # Azure publish profile for backend
          package: . # Path to the backend package
